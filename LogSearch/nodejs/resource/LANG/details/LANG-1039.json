{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12743223","self":"https://issues.apache.org/jira/rest/api/2/issue/12743223","key":"LANG-1039","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310481","id":"12310481","key":"LANG","name":"Commons Lang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310481&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310481&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310481&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310481&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10260","id":"10260","description":"Apache Commons components","name":"Commons"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/8","id":"8","description":"The described issue is not actually a problem - it is as designed.","name":"Not A Problem"},"customfield_12312322":null,"customfield_12310220":"2014-09-24T13:18:30.835+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Sat Sep 27 18:56:18 UTC 2014","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_482651999_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2014-09-28T06:03:39.709+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LANG-1039/watchers","watchCount":3,"isWatching":false},"created":"2014-09-22T15:59:27.758+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12326666","id":"12326666","description":"Bugfix release for 3.3.1","name":"3.3.2","archived":false,"released":true,"releaseDate":"2014-04-09"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2016-10-19T15:24:44.172+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313198","id":"12313198","name":"lang.builder.*"}],"timeoriginalestimate":null,"description":"HashCodeBuilder.reflectionHashCode(Object object) returns always the same result for any array. The result is 17.\n\nThere is no information in javadoc, that this method works in that way.\nThe same situation in previous versions.\n\n*Example:*\n\n{code}\npublic class HashCodeBuilderTest {\n    \n    public static void main(String[] args) {\n        \n        System.out.println(HashCodeBuilder.reflectionHashCode(new double[] {1, 1}));\n        System.out.println(HashCodeBuilder.reflectionHashCode(new double[] {2, 2}));\n        System.out.println(HashCodeBuilder.reflectionHashCode(new int[] {3, 3}));\n        System.out.println(HashCodeBuilder.reflectionHashCode(new int[] {4, 4}));\n        System.out.println(HashCodeBuilder.reflectionHashCode(new Long[] {5L, 5L}));\n        System.out.println(HashCodeBuilder.reflectionHashCode(new Double[] {null, null}));\n        System.out.println(HashCodeBuilder.reflectionHashCode(new Object[] {Boolean.FALSE, 1L, null}));\n        \n    }\n}\n{code}\n\n*Output:*\n{code}\n17\n17\n17\n17\n17\n17\n17\n{code}\n\n*Fix example 1*\n\nFirst check if argument obj in HashCodeBuilder.reflectionHashCode(Object obj) is an array and than use java.util.Arrays.hashCode(Object[] array)\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"HashCodeBuilder.reflectionHashCode(Object object) returns always the same result for any array","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bpaszkow","name":"bpaszkow","key":"bpaszkow","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bartosz Paszkowski","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bpaszkow","name":"bpaszkow","key":"bpaszkow","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bartosz Paszkowski","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"Windows 7, Java 6","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12743223/comment/14146299","id":"14146299","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dmjones500","name":"dmjones500","key":"dmjones500","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dmjones500&avatarId=31601","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dmjones500&avatarId=31601","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dmjones500&avatarId=31601","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dmjones500&avatarId=31601"},"displayName":"Duncan Jones","active":true,"timeZone":"Europe/London"},"body":"This method works by examining the fields of an object and creating a cumulative hashcode based upon them. Given that an array has no fields, this behaviour seems correct to me (albeit a little counter-intuitive).\n\nIf those arrays had been contained within an object (the normal use case), your results would not be observed. Your results are identical to what you'd see if you simply called {{HashCodeBuilder.reflectionHashCode(new Object())}}.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dmjones500","name":"dmjones500","key":"dmjones500","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dmjones500&avatarId=31601","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dmjones500&avatarId=31601","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dmjones500&avatarId=31601","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dmjones500&avatarId=31601"},"displayName":"Duncan Jones","active":true,"timeZone":"Europe/London"},"created":"2014-09-24T13:18:30.835+0000","updated":"2014-09-24T13:18:30.835+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12743223/comment/14147565","id":"14147565","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=halfdan","name":"halfdan","key":"halfdan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Piotr Kaczmarski","active":true,"timeZone":"Etc/UTC"},"body":"The Javadoc for method HashCodeBuilder.reflectionHashCode states:\n{quote}\"This method uses reflection to build a valid hash code.\"{quote}\nAnd a valid hashCode implementation indeed doesn't have to produce distinct values for different instances:\n{quote}\nAs much as is reasonably practical, the hashCode method defined by class Object does return distinct integers for distinct objects. (This is typically implemented by converting the internal address of the object into an integer, but this implementation technique is not required by the JavaTM programming language.)\n{quote}\n\nHowever in this particular implementation we can apply \"the principle of least astonishment\":\n{quote}\nIf a necessary feature has a high astonishment factor, it may be necessary to redesign the feature.\n{quote}\n\nOne can be astonished seeing how this method returns the same value (namely 17) for every array, no matter how big or of what type.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=halfdan","name":"halfdan","key":"halfdan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Piotr Kaczmarski","active":true,"timeZone":"Etc/UTC"},"created":"2014-09-25T09:14:15.181+0000","updated":"2014-09-25T09:14:15.181+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12743223/comment/14147601","id":"14147601","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dmjones500","name":"dmjones500","key":"dmjones500","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dmjones500&avatarId=31601","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dmjones500&avatarId=31601","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dmjones500&avatarId=31601","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dmjones500&avatarId=31601"},"displayName":"Duncan Jones","active":true,"timeZone":"Europe/London"},"body":"The first line in the Javadoc for the {{HashCodeBuilder}} is:\n\nbq. Assists in implementing {{Object.hashCode()}} methods.\n\nIn other words. the supported use case is generating a hash code for your own custom class. You either do this manually by appending fields to the hash code builder, or you use the reflective builder:\n\n{code:java}\npublic int hashCode() {\n  return HashCodeBuilder.reflectionHashCode(this);\n}\n{code}\n\nThere is no expectation that {{reflectionHashCode()}} will be passed a primitive array object. I see no reason to change this behaviour, given the documented intention of the class.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dmjones500","name":"dmjones500","key":"dmjones500","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dmjones500&avatarId=31601","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dmjones500&avatarId=31601","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dmjones500&avatarId=31601","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dmjones500&avatarId=31601"},"displayName":"Duncan Jones","active":true,"timeZone":"Europe/London"},"created":"2014-09-25T10:22:50.960+0000","updated":"2014-09-25T10:22:50.960+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12743223/comment/14147988","id":"14147988","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=halfdan","name":"halfdan","key":"halfdan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Piotr Kaczmarski","active":true,"timeZone":"Etc/UTC"},"body":"{quote}\nThe first line in the Javadoc for the HashCodeBuilder is:\nbq. Assists in implementing Object.hashCode() methods.\n{quote}\n\nand the second line in the Javadoc is:\nbq. This class enables a good hashCode method to be built for any class.\n\nThis is the interface:\nreflectionHashCode(Object object, String... excludeFields)\nIt promises, that it will work for any given Object.\nIt doesnt say, that it isn't for arrays.\nNeither does Javadoc.\n\nSo I see two options:\n1. To add statement like: \"Warning: This method provides constant result of 17 for any array.\"\n2. To refactor this method for consistency.\n\nLiving it the way it is is simply irresponsible.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=halfdan","name":"halfdan","key":"halfdan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Piotr Kaczmarski","active":true,"timeZone":"Etc/UTC"},"created":"2014-09-25T17:07:52.964+0000","updated":"2014-09-25T17:16:22.842+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12743223/comment/14149041","id":"14149041","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dmjones500","name":"dmjones500","key":"dmjones500","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dmjones500&avatarId=31601","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dmjones500&avatarId=31601","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dmjones500&avatarId=31601","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dmjones500&avatarId=31601"},"displayName":"Duncan Jones","active":true,"timeZone":"Europe/London"},"body":"Could you describe your use case in more detail? As I've explained, our expectation is for this method to be used to help you override {{Object.hashCode()}} when creating your own class. Consequently, we were not expecting to be passed an array as an argument.\n\nIt would be helpful to understand how you are trying to use it, so we can better decide if this is a use case we want to support. If it is, we can look at altering the class behaviour. If it's not, then we can look to improve the Javadocs to avoid similar confusion in the future.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dmjones500","name":"dmjones500","key":"dmjones500","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dmjones500&avatarId=31601","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dmjones500&avatarId=31601","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dmjones500&avatarId=31601","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dmjones500&avatarId=31601"},"displayName":"Duncan Jones","active":true,"timeZone":"Europe/London"},"created":"2014-09-26T11:30:32.092+0000","updated":"2014-09-26T11:30:32.092+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12743223/comment/14149284","id":"14149284","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=halfdan","name":"halfdan","key":"halfdan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Piotr Kaczmarski","active":true,"timeZone":"Etc/UTC"},"body":"There is no such use case. \nWe've only found a bug in this method, that is all.\nSo we are telling you about it to be helpful and to improve your library.\nIf you say:\n{quote}\nConsequently, we were not expecting to be passed an array as an argument.\n{quote}\nthan you must allways remember, that your code should be idiot-proof.\nYou cannot simply expect, that your code will be used according to your guides - you have to enforce this.\n\nI'm sure you will come up with some good solution.\nGood luck.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=halfdan","name":"halfdan","key":"halfdan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Piotr Kaczmarski","active":true,"timeZone":"Etc/UTC"},"created":"2014-09-26T15:21:51.726+0000","updated":"2014-09-26T15:27:37.947+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12743223/comment/14149311","id":"14149311","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kgorecki","name":"kgorecki","key":"kgorecki","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Krystian Górecki","active":true,"timeZone":"Etc/UTC"},"body":"Then for consistency let's make all these methods: {code}HashCodeBuilder.append(boolean[])\nHashCodeBuilder.append(char[])\nHashCodeBuilder.append(byte[])\nHashCodeBuilder.append(double[])\nHashCodeBuilder.append(int[])\nHashCodeBuilder.append(Object[])\nHashCodeBuilder.append(long[])\nHashCodeBuilder.append(short[])\nHashCodeBuilder.append(float[]){code}\nreturn 17 ;)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kgorecki","name":"kgorecki","key":"kgorecki","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Krystian Górecki","active":true,"timeZone":"Etc/UTC"},"created":"2014-09-26T15:39:17.041+0000","updated":"2014-09-26T15:39:17.041+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12743223/comment/14150006","id":"14150006","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dmjones500","name":"dmjones500","key":"dmjones500","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dmjones500&avatarId=31601","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dmjones500&avatarId=31601","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dmjones500&avatarId=31601","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dmjones500&avatarId=31601"},"displayName":"Duncan Jones","active":true,"timeZone":"Europe/London"},"body":"Since there isn't a new use case being discussed, I'm content that the class can remain as it is (functionally). To avoid any future confusion about how the method works, I've made some adjustments to the Javadoc to make it clear that a constant result is return if the supplied object has no fields to include in the hash code.\n\n---\n\nAuthor: djones\nDate: Fri Sep 26 21:19:12 2014\nNew Revision: 1627889\n\nURL: http://svn.apache.org/r1627889\nLog:\nMade it clear that the fields of the object form the hash code (LANG-1039).\nPulled magic values into constants.\n\nModified:\n    commons/proper/lang/trunk/src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dmjones500","name":"dmjones500","key":"dmjones500","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dmjones500&avatarId=31601","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dmjones500&avatarId=31601","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dmjones500&avatarId=31601","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dmjones500&avatarId=31601"},"displayName":"Duncan Jones","active":true,"timeZone":"Europe/London"},"created":"2014-09-26T21:24:17.114+0000","updated":"2014-09-26T21:24:17.114+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12743223/comment/14150702","id":"14150702","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bpaszkow","name":"bpaszkow","key":"bpaszkow","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bartosz Paszkowski","active":true,"timeZone":"Etc/UTC"},"body":"Thank you.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bpaszkow","name":"bpaszkow","key":"bpaszkow","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bartosz Paszkowski","active":true,"timeZone":"Etc/UTC"},"created":"2014-09-27T18:51:40.964+0000","updated":"2014-09-27T18:51:40.964+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12743223/comment/14150706","id":"14150706","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kgorecki","name":"kgorecki","key":"kgorecki","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Krystian Górecki","active":true,"timeZone":"Etc/UTC"},"body":"Thank you!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kgorecki","name":"kgorecki","key":"kgorecki","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Krystian Górecki","active":true,"timeZone":"Etc/UTC"},"created":"2014-09-27T18:56:18.757+0000","updated":"2014-09-27T18:56:18.757+0000"}],"maxResults":10,"total":10,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LANG-1039/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i20cav:"}}