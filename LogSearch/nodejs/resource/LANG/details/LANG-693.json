{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12504149","self":"https://issues.apache.org/jira/rest/api/2/issue/12504149","key":"LANG-693","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310481","id":"12310481","key":"LANG","name":"Commons Lang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310481&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310481&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310481&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310481&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10260","id":"10260","description":"Apache Commons components","name":"Commons"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12317952","id":"12317952","description":"Bug fixes and new features, at least requires Java 6.0","name":"3.2","archived":false,"released":true,"releaseDate":"2014-01-01"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2011-04-20T06:26:39.527+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Aug 08 22:03:33 UTC 2013","customfield_12310420":"2999","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_66274333094_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2013-05-19T10:37:07.076+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LANG-693/watchers","watchCount":3,"isWatching":false},"created":"2011-04-13T09:04:54.050+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.svg","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12316043","id":"12316043","description":"","name":"2.6","archived":false,"released":true,"releaseDate":"2011-01-17"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-10-15T02:32:59.896+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313200","id":"12313200","name":"lang.math.*"}],"timeoriginalestimate":null,"description":"Method createNumber from NumberUtils is trying to parse a string with a floating point number always first as a Float, that will cause that if we send a string with a number that will need a Double or even a BigDecimal the number will be truncate to accommodate into the Float without an exception to be thrown, so in fact we will no be returning ever neither a Double nor a BigDecimal.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12583756","id":"12583756","filename":"LANG-693(2).patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=calvine","name":"calvine","key":"calvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Calvin Echols","active":true,"timeZone":"America/New_York"},"created":"2013-05-19T02:50:58.429+0000","size":3591,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12583756/LANG-693%282%29.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"63034","customfield_12312823":null,"summary":"Method createNumber from NumberUtils doesn't work for floating point numbers other than Float","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rego","name":"rego","key":"rego","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Carlos Rego","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rego","name":"rego","key":"rego","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Carlos Rego","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504149/comment/13021987","id":"13021987","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bayard","name":"bayard","key":"bayard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Henri Yandell","active":true,"timeZone":"America/Los_Angeles"},"body":"Can you provide more data? If I run the following test it looks to happily be returning Doubles (and already had a test for BigDecimal):\n\n        // LANG-693\n        assertEquals(\"createNumber(String) LANG-693 failed\", Double.MAX_VALUE, NumberUtils\n                    .createNumber(\"\" + Double.MAX_VALUE));\n        System.err.println( NumberUtils.createNumber(\"\"+Double.MAX_VALUE));\n        System.err.println( NumberUtils.createNumber(\"\"+Double.MAX_VALUE).getClass());   // prints java.lang.Double","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bayard","name":"bayard","key":"bayard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Henri Yandell","active":true,"timeZone":"America/Los_Angeles"},"created":"2011-04-20T06:26:39.527+0000","updated":"2011-04-20T06:26:39.527+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504149/comment/13025113","id":"13025113","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rego","name":"rego","key":"rego","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Carlos Rego","active":true,"timeZone":"Etc/UTC"},"body":"We've have tested it in a JUnit with the following string: \"0.9090909090909091\", that debugging it returns a float with the value 0.90909094, which clearly is wrong. That's why we thought the approach for the conversion is wrong.\nDid you tried to debug it just to be sure that the execution flow is going as you expect?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rego","name":"rego","key":"rego","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Carlos Rego","active":true,"timeZone":"Etc/UTC"},"created":"2011-04-26T07:36:49.772+0000","updated":"2011-04-26T07:36:49.772+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504149/comment/13025161","id":"13025161","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sebb%40apache.org","name":"sebb@apache.org","key":"sebb@apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sebb","active":true,"timeZone":"Etc/GMT"},"body":"I can confirm that \"0.9090909090909091\" is returned as a float 0.90909094.\n\nWhether this is wrong is a different matter. The Javadoc says:\n\n{quote}\nTurns a string value into a java.lang.Number.\n\nFirst, the value is examined for a type qualifier on the end ('f','F','d','D','l','L'). If it is found, it starts trying to create successively larger types from the type specified until one is found that can represent the value.\n\nIf a type specifier is not found, it will check for a decimal point and then try successively larger types from Integer to BigInteger and from Float to BigDecimal.\n{quote}\n\nThe second paragraph does not specifically say that the code will return the \"best\" match, nor does the 3rd para. It's not clear to me whether the method was ever intended to return a \"best\" match (for some definintion of best). If such behaviour is intended, then the Javadoc needs to be clarified, and the code changed accordingly.\n\nNote that the test of Double.MAX_VALUE works because this is converted to Float.INFINITY.\nNon-infinite values are rounded by Float.valueOf(String) to the nearest value, so are never checked as doubles.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sebb%40apache.org","name":"sebb@apache.org","key":"sebb@apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sebb","active":true,"timeZone":"Etc/GMT"},"created":"2011-04-26T10:17:50.389+0000","updated":"2011-04-26T10:29:50.727+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504149/comment/13025634","id":"13025634","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rego","name":"rego","key":"rego","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Carlos Rego","active":true,"timeZone":"Etc/UTC"},"body":"In an automatic conversion to string of a number you will not have the qualifier, so if you try to undo the conversion with this method it will fail, because the approach when you don't sent the qualifier is not working. Anyway, we are working with BigDecimal instances that don't have a qualifier.\n\nIf you don't want a whole refactor of the method you could at least check if the resulted number has the same toString value than the parameter and if not try with a larger type, that should avoid this kind of problem (not very nice approach anyway).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rego","name":"rego","key":"rego","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Carlos Rego","active":true,"timeZone":"Etc/UTC"},"created":"2011-04-27T06:30:29.583+0000","updated":"2011-04-27T06:30:29.583+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504149/comment/13026385","id":"13026385","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bayard","name":"bayard","key":"bayard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Henri Yandell","active":true,"timeZone":"America/Los_Angeles"},"body":"Setting fix version to 3.x (i.e. post 3.0). Seems like a very fair issue to take a stab at fixing.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bayard","name":"bayard","key":"bayard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Henri Yandell","active":true,"timeZone":"America/Los_Angeles"},"created":"2011-04-28T17:31:51.383+0000","updated":"2011-04-28T17:31:51.383+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504149/comment/13089318","id":"13089318","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bayard","name":"bayard","key":"bayard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Henri Yandell","active":true,"timeZone":"America/Los_Angeles"},"body":"The toString may not be the nicest, but it definitely works :)\n\nThe only test I get failing if I use it is the LANG-521 \"2.\" use case. That switches from being a Float to being a BigDecimal. I suspect there might be problems with exponents though.\n\nAll the problems would seem to be creating BigDecimals unnecessarily, rather than creating Floats and losing data. So worst case the String test seems preferable. \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bayard","name":"bayard","key":"bayard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Henri Yandell","active":true,"timeZone":"America/Los_Angeles"},"created":"2011-08-23T07:10:46.329+0000","updated":"2011-08-23T07:10:46.329+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504149/comment/13102220","id":"13102220","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bayard","name":"bayard","key":"bayard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Henri Yandell","active":true,"timeZone":"America/Los_Angeles"},"body":"Pushing back to 3.0.3; I don't think is ready yet as the toString approach is likely to lead to bugs and there's not another solution on the table.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bayard","name":"bayard","key":"bayard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Henri Yandell","active":true,"timeZone":"America/Los_Angeles"},"created":"2011-09-11T05:10:29.247+0000","updated":"2011-09-11T05:10:29.247+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504149/comment/13494866","id":"13494866","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tn","name":"tn","key":"tn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Neidhart","active":true,"timeZone":"Europe/Berlin"},"body":"Why not trying to create a double first in the createNumber method:\n\n{noformat}\n                //Must be a float,double,BigDec\n                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);\n                try {\n                    Float f = createFloat(str);\n                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {\n                        return f;\n                    }\n                } catch (NumberFormatException nfe) { // NOPMD\n                    // ignore the bad number\n                }\n                try {\n                    Double d = createDouble(str);\n                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {\n                        return d;\n                    }\n                } catch (NumberFormatException nfe) { // NOPMD\n                    // ignore the bad number\n                }\n{noformat}\n\nRight now, we first try to convert it to a float, and if it does not fit, we try it with double.\nBut this way we will always lose the precision unless one specifies the 'd' suffix.\n\nThe default in java for decimal values is double anyway (without specifying a type qualifier), so it makes sense to use the same behavior in the createNumber method imho.\n\nIf somebody really wants to have a float, he/she can specify the 'f' type qualifier.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tn","name":"tn","key":"tn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Neidhart","active":true,"timeZone":"Europe/Berlin"},"created":"2012-11-11T12:17:29.639+0000","updated":"2012-11-11T12:17:29.639+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504149/comment/13494894","id":"13494894","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=garydgregory","name":"garydgregory","key":"garydgregory","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=garydgregory&avatarId=16828","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=garydgregory&avatarId=16828","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=garydgregory&avatarId=16828","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=garydgregory&avatarId=16828"},"displayName":"Gary Gregory","active":true,"timeZone":"America/Denver"},"body":"So this proposal is not b-compatible but it sounds like an improvement, or even a bug fix if you consider the loss of precision. +1.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=garydgregory","name":"garydgregory","key":"garydgregory","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=garydgregory&avatarId=16828","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=garydgregory&avatarId=16828","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=garydgregory&avatarId=16828","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=garydgregory&avatarId=16828"},"displayName":"Gary Gregory","active":true,"timeZone":"America/Denver"},"created":"2012-11-11T14:57:13.132+0000","updated":"2012-11-11T14:57:13.132+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504149/comment/13495060","id":"13495060","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sebb%40apache.org","name":"sebb@apache.org","key":"sebb@apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sebb","active":true,"timeZone":"Etc/GMT"},"body":"bq. So this proposal is not b-compatible ...\n\nI assume you must mean behaviour compatible rather than binary compatible.\n\nAs far as I can tell, if the code is changed to try double and then float, the result will always be a double.\nI'm not sure that is much of an improvement.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sebb%40apache.org","name":"sebb@apache.org","key":"sebb@apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sebb","active":true,"timeZone":"Etc/GMT"},"created":"2012-11-12T02:05:15.279+0000","updated":"2012-11-12T02:05:15.279+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504149/comment/13495135","id":"13495135","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tn","name":"tn","key":"tn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Neidhart","active":true,"timeZone":"Europe/Berlin"},"body":"Maybe I was unclear, but the float part afterwards would not be needed anymore, as this would never succeed.\n\nAnother idea would be to add something like this (pseudo-code)\n\n{noformat}\n//Must be a float,double,BigDec\nboolean allZeros = isAllZeros(mant) && isAllZeros(exp);\ntry {\n    Float f = createFloat(str);\n    BigDecimal one = createBigDecimal(str);\n    BigDecimal two = new BigDecimal(f);\n\n    // check for loss of precision in the conversion\n    if (one.compareTo(two) == 0) {\n       ....\n\n} catch (NumberFormatException nfe) { // NOPMD\n    // ignore the bad number\n}\n{noformat}\n\nMaybe the getPrecision() method from BigDecimal could be used too.\nIt is also a problem of definition, as a floating-point number can not always precisely expressed in the related data types, so the question is how to define when a float will be returned, and when a double.\n\nThat's why I put my original proposal to just assume a double in case of a missing type qualifier, as this is the default in java anyway.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tn","name":"tn","key":"tn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Neidhart","active":true,"timeZone":"Europe/Berlin"},"created":"2012-11-12T07:30:26.576+0000","updated":"2012-11-12T07:30:26.576+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504149/comment/13495379","id":"13495379","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sebb%40apache.org","name":"sebb@apache.org","key":"sebb@apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sebb","active":true,"timeZone":"Etc/GMT"},"body":"As pointed out in the original issue description, the same problem applies to double/BigDecimal.\nIf the code is changed to try double first, then the method will never create a BigDecimal unless it is larger than Double.MAX_VALUE, thus potentially losing precision again.\n\nAs I see it, the problem is that the method currently only switches output type based on magnitude, not on precision.\n\nWould it make sense to check the precision of the input number and use that to choose the starting conversion?\n\ne.g. if more than 6 digits are present, use double; if more than 17 digits, use BigDecimal.\n\nThis should be fairly cheap to do, and it would be easy to determine in advance what number type would be created.\n\nIt would not always choose the minimal representation, but at least it would never lose precision.\n\n\n[AFAICT:\n\n6 is the max number of digits in a number guaranteed not to lose precision (some 7/8 digit numbers are also OK).\nSimilarly, double can support 15 digits guaranteed (to 17 max).]","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sebb%40apache.org","name":"sebb@apache.org","key":"sebb@apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sebb","active":true,"timeZone":"Etc/GMT"},"created":"2012-11-12T16:21:19.305+0000","updated":"2012-11-12T16:21:19.305+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504149/comment/13495401","id":"13495401","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=garydgregory","name":"garydgregory","key":"garydgregory","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=garydgregory&avatarId=16828","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=garydgregory&avatarId=16828","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=garydgregory&avatarId=16828","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=garydgregory&avatarId=16828"},"displayName":"Gary Gregory","active":true,"timeZone":"America/Denver"},"body":"I like preserving precision.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=garydgregory","name":"garydgregory","key":"garydgregory","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=garydgregory&avatarId=16828","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=garydgregory&avatarId=16828","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=garydgregory&avatarId=16828","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=garydgregory&avatarId=16828"},"displayName":"Gary Gregory","active":true,"timeZone":"America/Denver"},"created":"2012-11-12T16:47:28.822+0000","updated":"2012-11-12T16:47:28.822+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504149/comment/13495412","id":"13495412","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tn","name":"tn","key":"tn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Neidhart","active":true,"timeZone":"Europe/Berlin"},"body":"sounds pretty reasonable.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tn","name":"tn","key":"tn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Thomas Neidhart","active":true,"timeZone":"Europe/Berlin"},"created":"2012-11-12T16:59:13.952+0000","updated":"2012-11-12T16:59:13.952+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504149/comment/13495424","id":"13495424","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sebb%40apache.org","name":"sebb@apache.org","key":"sebb@apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sebb","active":true,"timeZone":"Etc/GMT"},"body":"Examples of valid numbers that would trigger an upscale:\n\nFloat.MAX_VALUE is 3.4028235e+38 - i.e. 8 digits; that would convert to Double\nDouble.MAX_VALUE is 1.7976931348623157e+308 - i.e. 17 digits; would convert to BigDecimal\n\nIn theory one could do extra work to handle the boundary cases.\nI've not looked at what is involved.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sebb%40apache.org","name":"sebb@apache.org","key":"sebb@apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sebb","active":true,"timeZone":"Etc/GMT"},"created":"2012-11-12T17:11:48.786+0000","updated":"2012-11-12T17:11:48.786+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504149/comment/13661472","id":"13661472","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=calvine","name":"calvine","key":"calvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Calvin Echols","active":true,"timeZone":"America/New_York"},"body":"This is a patch that resolves this bug. Any feedback would be greatly appreciated!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=calvine","name":"calvine","key":"calvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Calvin Echols","active":true,"timeZone":"America/New_York"},"created":"2013-05-19T02:45:47.819+0000","updated":"2013-05-19T02:45:47.819+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504149/comment/13661473","id":"13661473","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=calvine","name":"calvine","key":"calvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Calvin Echols","active":true,"timeZone":"America/New_York"},"body":"Hello All,\n\nI am new to the Apache Community. I have attached a patch that resolves this issue. I would love any feedback you can provide.\n\nThank you,\nCalvin","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=calvine","name":"calvine","key":"calvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Calvin Echols","active":true,"timeZone":"America/New_York"},"created":"2013-05-19T02:46:22.816+0000","updated":"2013-05-19T02:46:22.816+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504149/comment/13661476","id":"13661476","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=calvine","name":"calvine","key":"calvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Calvin Echols","active":true,"timeZone":"America/New_York"},"body":"Fixed error in comments around bug fix.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=calvine","name":"calvine","key":"calvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Calvin Echols","active":true,"timeZone":"America/New_York"},"created":"2013-05-19T02:50:58.432+0000","updated":"2013-05-19T02:50:58.432+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504149/comment/13661526","id":"13661526","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sebb%40apache.org","name":"sebb@apache.org","key":"sebb@apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sebb","active":true,"timeZone":"Etc/GMT"},"body":"Thanks very much; neat fix. Applied here:\n\nURL: http://svn.apache.org/r1484263\nLog:\nLANG-693 Method createNumber from NumberUtils doesn't work for floating point numbers other than Float\n\nModified:\n    commons/proper/lang/trunk/src/changes/changes.xml\n    commons/proper/lang/trunk/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n    commons/proper/lang/trunk/src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java\n\n=====\n\nI made two very trivial style changes: moved the declaration of numDecimals closer to where it is first used, and changed less => fewer in a comment (grammatical pedantry on my part!).\n\nThanks again.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sebb%40apache.org","name":"sebb@apache.org","key":"sebb@apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sebb","active":true,"timeZone":"Etc/GMT"},"created":"2013-05-19T10:37:07.123+0000","updated":"2013-05-19T10:37:07.123+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504149/comment/13661600","id":"13661600","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=calvine","name":"calvine","key":"calvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Calvin Echols","active":true,"timeZone":"America/New_York"},"body":"Thank you very much!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=calvine","name":"calvine","key":"calvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Calvin Echols","active":true,"timeZone":"America/New_York"},"created":"2013-05-19T17:05:56.264+0000","updated":"2013-05-19T17:05:56.264+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12504149/comment/13734070","id":"13734070","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jkoppel","name":"jkoppel","key":"jkoppel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"James Koppel","active":true,"timeZone":"Etc/UTC"},"body":"This still can fail if there are digits before the decimal point.\n\n> System.out.println(NumberUtils.createNumber(\"169000121.0\"));\n1.69000128E8","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jkoppel","name":"jkoppel","key":"jkoppel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"James Koppel","active":true,"timeZone":"Etc/UTC"},"created":"2013-08-08T22:03:33.716+0000","updated":"2013-08-08T22:03:33.716+0000"}],"maxResults":21,"total":21,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LANG-693/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0b5ov:"}}