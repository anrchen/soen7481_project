{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12340611","self":"https://issues.apache.org/jira/rest/api/2/issue/12340611","key":"LANG-64","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310481","id":"12310481","key":"LANG","name":"Commons Lang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310481&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310481&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310481&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310481&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10260","id":"10260","description":"Apache Commons components","name":"Commons"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/4","id":"4","description":"The problem is not completely described.","name":"Incomplete"},"customfield_12312322":null,"customfield_12310220":"2003-03-15T02:07:08.000+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Sat Mar 15 02:07:08 UTC 2003","customfield_12310420":"147027","customfield_12312320":null,"customfield_12310222":"6_*:*_1_*:*_0_*|*_5_*:*_1_*:*_123151464178","customfield_12312321":null,"resolutiondate":"2007-02-06T23:47:14.176+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LANG-64/watchers","watchCount":0,"isWatching":false},"created":"2003-03-14T15:02:50.000+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-10-16T08:54:59.377+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[],"timeoriginalestimate":null,"description":"Add the following to EqualsBuilderTest:\n\n    public void testSubclassing()\n    {\n        TestObject to2 = new TestObject(5);\n        TestObject to1Ter = new TestSubObject(4, 10);\n        TestObject to1Bis = new TestSubObject(4, 10);\n        TestObject to1 = new TestObject(4);\n        testReflectionEqualsEquivalenceRelationship(to1, to1Bis, to1Ter, to2,\nnew TestObject(), false);\n    }\n\nAs you can see, the whole concept behind appendSuper\nand such produces equals methods which are not symmetric\nand thus do not fulfill the equals contract.\n\nThe two general solutions I'm aware of are: (1) Make the equals\nmethod final, so that subclasses are required to all\nuse the same equals method as each other and the superclass,\nor (2) Use foo.getClass() == bar.getClass() instead\nof instanceOf, so that an instance of the superclass is\nnever equals to an instance of a subclass.\n\nIn particular situations there might be specific solutions (look at\nthe way equals is defined for List and Set for example).","customfield_10010":17987.0,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"74910","customfield_12312823":null,"summary":"Subclassing and EqualsBuilder is broken","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kingdon%40panix.com","name":"kingdon@panix.com","key":"kingdon@panix.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jim Kingdon","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kingdon%40panix.com","name":"kingdon@panix.com","key":"kingdon@panix.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jim Kingdon","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"Operating System: All\nPlatform: All","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12340611/comment/12403888","id":"12403888","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kingdon%40panix.com","name":"kingdon@panix.com","key":"kingdon@panix.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jim Kingdon","active":true,"timeZone":"Etc/UTC"},"body":"No wait, I take it back.\n\nI now see the code which checks for subclasses and\nforces equals to false in the relevant cases.\n\nThe tests would probably be a bit clearer if they\nwere broken apart in a greater number of test methods,\nwith names which reflected the things they did.\nFor what it is worth, here's the test I wrote\nwhich helped me see what was going on:\n\n    public void testSubclassingIsCommutative()\n    {\n        TestObject superObj = new TestObject(4);\n        TestSubObject subObj = new TestSubObject(4, 10);\n        boolean superFirst = EqualsBuilder.reflectionEquals(superObj, subObj);\n        boolean subFirst = EqualsBuilder.reflectionEquals(subObj, superObj);\n        assertEquals(superFirst, subFirst);\n    }\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kingdon%40panix.com","name":"kingdon@panix.com","key":"kingdon@panix.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jim Kingdon","active":true,"timeZone":"Etc/UTC"},"created":"2003-03-14T15:28:44.000+0000","updated":"2003-03-14T15:28:44.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12340611/comment/12403889","id":"12403889","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ggregory%40seagullsw.com","name":"ggregory@seagullsw.com","key":"ggregory@seagullsw.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10453","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10453","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10453","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10453"},"displayName":"ggregory@seagullsw.com","active":false,"timeZone":"Etc/UTC"},"body":"Thank you for your thoughts, making good unit tests is key! Perhaps better \ncomments would help of course... ;-)\n\nThe reasons I implemented asserting equivalence relationships all in the one \nmethod testReflectionEqualsEquivalenceRelationship is to allow for the whole \nequals contract to be validated at once. If the method where broken up in its \ncomponent tests (reflection, symetry, transitivity, and sanity checks), it \nwould be possible for tests case methods to be written that only assert a \nportion of the equals contract. IOW, this is a case where refactoring could \nintroduce some bugs in the future. In your example style, I would have to \nremember to write all of the testSubclassingIsXXX methods for a given object \nfixture in order to assert the contract. \n\nThe test case methods can be written to call \ntestReflectionEqualsEquivalenceRelationship and be named for what they kind of \nobjects tree they test. So the test case writer can dream up some nasty object \ntree and create a test case for it. For this test case, you can consider that \nthe focus is on writing test fixtures rather than new equals contract \nassertions.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ggregory%40seagullsw.com","name":"ggregory@seagullsw.com","key":"ggregory@seagullsw.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10453","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10453","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10453","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10453"},"displayName":"ggregory@seagullsw.com","active":false,"timeZone":"Etc/UTC"},"created":"2003-03-15T02:07:08.000+0000","updated":"2003-03-15T02:07:08.000+0000"}],"maxResults":2,"total":2,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LANG-64/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0d6zz:"}}