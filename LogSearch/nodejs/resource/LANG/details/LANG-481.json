{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12413122","self":"https://issues.apache.org/jira/rest/api/2/issue/12413122","key":"LANG-481","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310481","id":"12310481","key":"LANG","name":"Commons Lang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310481&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310481&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310481&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310481&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10260","id":"10260","description":"Apache Commons components","name":"Commons"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12311714","id":"12311714","description":"JDK 1.5 focused version of Lang","name":"3.0","archived":true,"released":true,"releaseDate":"2011-07-19"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2009-01-24T12:57:41.867+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Sat Jan 16 08:04:53 UTC 2010","customfield_12310420":"147347","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_19606109150_*|*_6_*:*_2_*:*_2856562955_*|*_4_*:*_1_*:*_8426329387","customfield_12312321":null,"resolutiondate":"2010-01-16T08:04:53.540+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LANG-481/watchers","watchCount":1,"isWatching":false},"created":"2009-01-23T19:48:12.048+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.svg","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312481","id":"12312481","description":"Bugfix release of the Lang1 codebase","name":"2.4","archived":true,"released":true,"releaseDate":"2008-03-18"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2010-01-16T08:04:53.537+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313203","id":"12313203","name":"lang.*"}],"timeoriginalestimate":null,"description":"The hashCode() methods of the range classes look very suspicious to me. The value is lazily initialized, but the calculation is done _on the cached value. With some unlucky timing a caller may get an incomplete hash.\n\nAn unlucky sequence of Code could be something like\nT1:        if (hashCode == 0) // true\nT1:            hashCode = 17;\nT2:         if (hashCode == 0) // now false because hashCode was already set to 17\nT2:         return hashCode; // return 17\nT1:            hashCode = 37 * hashCode...........\n\nwhere T1 and T2 are different threads accessing the method in parallel and T2 gets the wrong hash \"17\".\n\nAffected classes are\n\norg.apache.commons.lang.math.DoubleRange\norg.apache.commons.lang.math.FloatRange\norg.apache.commons.lang.math.IntRange\norg.apache.commons.lang.math.LongRange\norg.apache.commons.lang.math.NumberRange\norg.apache.commons.lang.math.Range\n\nPossible fix: calculate the hash on a temporary variable and finally assign it to the member","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12416350","id":"12416350","filename":"LANG-481.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=2091c76f726f21a61b6d2f8b885cc39d","name":"2091c76f726f21a61b6d2f8b885cc39d","key":"2091c76f726f21a61b6d2f8b885cc39d","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Boris","active":true,"timeZone":"Etc/UTC"},"created":"2009-08-12T19:03:38.803+0000","size":4659,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12416350/LANG-481.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12421806","id":"12421806","filename":"LANG-481-reordering_datarace.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=2091c76f726f21a61b6d2f8b885cc39d","name":"2091c76f726f21a61b6d2f8b885cc39d","key":"2091c76f726f21a61b6d2f8b885cc39d","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Boris","active":true,"timeZone":"Etc/UTC"},"created":"2009-10-10T19:27:51.403+0000","size":2864,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12421806/LANG-481-reordering_datarace.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"74731","customfield_12312823":null,"summary":"Possible race-conditions in hashCode of the range classes","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=2091c76f726f21a61b6d2f8b885cc39d","name":"2091c76f726f21a61b6d2f8b885cc39d","key":"2091c76f726f21a61b6d2f8b885cc39d","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Boris","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=2091c76f726f21a61b6d2f8b885cc39d","name":"2091c76f726f21a61b6d2f8b885cc39d","key":"2091c76f726f21a61b6d2f8b885cc39d","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Boris","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12413122/comment/12666915","id":"12666915","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jwcarman","name":"jwcarman","key":"jwcarman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"James Carman","active":true,"timeZone":"Etc/UTC"},"body":"If this is indeed an issue, there are other cached values also that have the same problem (toString, maxObject, minObject) in LongRange  This JIRA issue should encompass those, also.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jwcarman","name":"jwcarman","key":"jwcarman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"James Carman","active":true,"timeZone":"Etc/UTC"},"created":"2009-01-24T12:57:41.867+0000","updated":"2009-01-24T12:57:41.867+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12413122/comment/12666941","id":"12666941","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=2091c76f726f21a61b6d2f8b885cc39d","name":"2091c76f726f21a61b6d2f8b885cc39d","key":"2091c76f726f21a61b6d2f8b885cc39d","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Boris","active":true,"timeZone":"Etc/UTC"},"body":"toString, maxObject and minObject do not have *this* kind of race where you could end up with *wrong* data.\nOf course there is race too, but in the worst case, you may only end up calculating the value every time the method is called and the cached value is not visible to your Thread. Of course you get no caching, but you'll never get wrong data.\nSo this worst case is pretty much like not caching it at all, but with some luck you get the value cached - at least once for each thread.\n\nLooking at other classes this seems to be a common technique in commons-lang.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=2091c76f726f21a61b6d2f8b885cc39d","name":"2091c76f726f21a61b6d2f8b885cc39d","key":"2091c76f726f21a61b6d2f8b885cc39d","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Boris","active":true,"timeZone":"Etc/UTC"},"created":"2009-01-24T15:24:51.798+0000","updated":"2009-01-24T15:24:51.798+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12413122/comment/12666948","id":"12666948","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sebb%40apache.org","name":"sebb@apache.org","key":"sebb@apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sebb","active":true,"timeZone":"Etc/GMT"},"body":"I'm not sure that would be true for an arbitrary object: if an object is written in one thread, another thread may see a partially updated object unless the two threads synchronise on the same lock.\n\nHowever, the objects in this case (Long) are final which I think means that their contents will be published correctly - i.e. other threads will see the updated object in full or not at all.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sebb%40apache.org","name":"sebb@apache.org","key":"sebb@apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sebb","active":true,"timeZone":"Etc/GMT"},"created":"2009-01-24T16:03:43.843+0000","updated":"2009-01-24T16:03:43.843+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12413122/comment/12666954","id":"12666954","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=2091c76f726f21a61b6d2f8b885cc39d","name":"2091c76f726f21a61b6d2f8b885cc39d","key":"2091c76f726f21a61b6d2f8b885cc39d","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Boris","active":true,"timeZone":"Etc/UTC"},"body":"Sebb, you're right. What I said is not true for arbitrary Objects. Sorry.\nI think it's only true for immutable Objects (that use final fields). And only for atomic assignment operations (assignments of primitive longs and doubles on a non-volatile field is AFAIK not atomic, but object-reference assignment is indeed). But I guess there are better explanations out there then mine :-/","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=2091c76f726f21a61b6d2f8b885cc39d","name":"2091c76f726f21a61b6d2f8b885cc39d","key":"2091c76f726f21a61b6d2f8b885cc39d","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Boris","active":true,"timeZone":"Etc/UTC"},"created":"2009-01-24T16:46:26.135+0000","updated":"2009-01-24T16:46:26.135+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12413122/comment/12742243","id":"12742243","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bayard","name":"bayard","key":"bayard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Henri Yandell","active":true,"timeZone":"America/Los_Angeles"},"body":"What's the open topic on this issue? Which classes have the problem?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bayard","name":"bayard","key":"bayard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Henri Yandell","active":true,"timeZone":"America/Los_Angeles"},"created":"2009-08-12T07:05:09.310+0000","updated":"2009-08-12T07:05:09.310+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12413122/comment/12742521","id":"12742521","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=2091c76f726f21a61b6d2f8b885cc39d","name":"2091c76f726f21a61b6d2f8b885cc39d","key":"2091c76f726f21a61b6d2f8b885cc39d","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Boris","active":true,"timeZone":"Etc/UTC"},"body":"Henri, as far as I can see all the classes I mentioned in my report have the problem. All other classes I looked at not because they don't use the member-variable as a temp to calculate the value.\nThere is one exception from my first list (at least in current trunk): org.apache.commons.lang.math.Range looks safe\n\nSo it comes down to this classes:\norg.apache.commons.lang.math.DoubleRange\norg.apache.commons.lang.math.FloatRange\norg.apache.commons.lang.math.IntRange\norg.apache.commons.lang.math.LongRange\norg.apache.commons.lang.math.NumberRange","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=2091c76f726f21a61b6d2f8b885cc39d","name":"2091c76f726f21a61b6d2f8b885cc39d","key":"2091c76f726f21a61b6d2f8b885cc39d","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Boris","active":true,"timeZone":"Etc/UTC"},"created":"2009-08-12T18:56:51.960+0000","updated":"2009-08-12T18:56:51.960+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12413122/comment/12742522","id":"12742522","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=2091c76f726f21a61b6d2f8b885cc39d","name":"2091c76f726f21a61b6d2f8b885cc39d","key":"2091c76f726f21a61b6d2f8b885cc39d","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Boris","active":true,"timeZone":"Etc/UTC"},"body":"Possible patch to this issue.\nThis uses the same technique used elsewhere in commons-lang. Using a non-volatile field to cache the value (in the worst case it may be calculated every time, in the best case only once) and calculating the value on a temp variable so that there is never an inconsistent value stored in the field.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=2091c76f726f21a61b6d2f8b885cc39d","name":"2091c76f726f21a61b6d2f8b885cc39d","key":"2091c76f726f21a61b6d2f8b885cc39d","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Boris","active":true,"timeZone":"Etc/UTC"},"created":"2009-08-12T19:03:38.846+0000","updated":"2009-08-12T19:03:38.846+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12413122/comment/12752227","id":"12752227","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bayard","name":"bayard","key":"bayard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Henri Yandell","active":true,"timeZone":"America/Los_Angeles"},"body":"Patch applied - thanks Boris :)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bayard","name":"bayard","key":"bayard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Henri Yandell","active":true,"timeZone":"America/Los_Angeles"},"created":"2009-09-07T17:56:41.176+0000","updated":"2009-09-07T17:56:41.176+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12413122/comment/12764366","id":"12764366","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=2091c76f726f21a61b6d2f8b885cc39d","name":"2091c76f726f21a61b6d2f8b885cc39d","key":"2091c76f726f21a61b6d2f8b885cc39d","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Boris","active":true,"timeZone":"Etc/UTC"},"body":"I'm sorry, I just dicovered that there is another data-race in that methods that I overlooked before.\n\nIn short: Due to the Java Memory Model and allowed reorderings it is possible that the hashCode() can return 0 instead of the correct value and thus breaking HashMaps etc. in this case.\nPlease see [this post|http://jeremymanson.blogspot.com/2008/12/benign-data-races-in-java.html] for details on this issue and String.hashCode() in the java-sources as a reference how to do it right. He explained it better than I can.\n\nI'll attach a patch against trunk to fix this.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=2091c76f726f21a61b6d2f8b885cc39d","name":"2091c76f726f21a61b6d2f8b885cc39d","key":"2091c76f726f21a61b6d2f8b885cc39d","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Boris","active":true,"timeZone":"Etc/UTC"},"created":"2009-10-10T19:26:04.133+0000","updated":"2009-10-10T19:26:04.133+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12413122/comment/12774801","id":"12774801","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bayard","name":"bayard","key":"bayard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Henri Yandell","active":true,"timeZone":"America/Los_Angeles"},"body":"Currently considering deleting the *Range classes and replacing with a single Range class. Presumably it doesn't resolve this issue - need to check post LANG-551.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bayard","name":"bayard","key":"bayard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Henri Yandell","active":true,"timeZone":"America/Los_Angeles"},"created":"2009-11-08T18:11:24.408+0000","updated":"2009-11-08T18:11:24.408+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12413122/comment/12777861","id":"12777861","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bayard","name":"bayard","key":"bayard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Henri Yandell","active":true,"timeZone":"America/Los_Angeles"},"body":"*Range classes deleted. Need to figure out a fix for the hashCode data-race reordering. Seems that we need to cache the value or work it out in the constructor.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bayard","name":"bayard","key":"bayard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Henri Yandell","active":true,"timeZone":"America/Los_Angeles"},"created":"2009-11-14T10:02:02.760+0000","updated":"2009-11-14T10:02:02.760+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12413122/comment/12777947","id":"12777947","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=2091c76f726f21a61b6d2f8b885cc39d","name":"2091c76f726f21a61b6d2f8b885cc39d","key":"2091c76f726f21a61b6d2f8b885cc39d","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Boris","active":true,"timeZone":"Etc/UTC"},"body":"Henri,\nThe current hashCode() is fine of course :) And as optimum long as speed is no concern it's also the best. Just my 2ct on this topic:\n\nCaching or pre-calculating the value will be a trade-off on how you want to use the class. If you pre-calculate the value and never use hashCode() the \"effort\" was pointless. If you cache it, it will MAY be re-calculated on every call (but this is rather unlikely).\n\nI think the cached-approach is the best (if it's done right of course :)), but the constructor-approach is easier to get right.\nBut as one can use String.hashCode() as a boilerplate it should be easy to implement optimistic caching right.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=2091c76f726f21a61b6d2f8b885cc39d","name":"2091c76f726f21a61b6d2f8b885cc39d","key":"2091c76f726f21a61b6d2f8b885cc39d","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Boris","active":true,"timeZone":"Etc/UTC"},"created":"2009-11-14T15:33:24.472+0000","updated":"2009-11-14T15:33:24.472+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12413122/comment/12777994","id":"12777994","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bayard","name":"bayard","key":"bayard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Henri Yandell","active":true,"timeZone":"America/Los_Angeles"},"body":"Link to license useable String.java:\n\nhttp://svn.apache.org/repos/asf/harmony/enhanced/classlib/trunk/modules/luni/src/main/java/java/lang/String.java","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bayard","name":"bayard","key":"bayard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Henri Yandell","active":true,"timeZone":"America/Los_Angeles"},"created":"2009-11-14T19:43:54.715+0000","updated":"2009-11-14T19:43:54.715+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12413122/comment/12788868","id":"12788868","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=2091c76f726f21a61b6d2f8b885cc39d","name":"2091c76f726f21a61b6d2f8b885cc39d","key":"2091c76f726f21a61b6d2f8b885cc39d","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Boris","active":true,"timeZone":"Etc/UTC"},"body":"Sorry for the delay of my answer.\n\nThe hashCode() of Harmony has the same reorder-bug as described above. It loads from a non-volatile field without synchronisation, so the code can be reordered and 0 could be wrongly returned as a hashCode.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=2091c76f726f21a61b6d2f8b885cc39d","name":"2091c76f726f21a61b6d2f8b885cc39d","key":"2091c76f726f21a61b6d2f8b885cc39d","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Boris","active":true,"timeZone":"Etc/UTC"},"created":"2009-12-10T19:45:06.807+0000","updated":"2009-12-10T19:45:06.807+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12413122/comment/12789211","id":"12789211","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tellison","name":"tellison","key":"tellison","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tim Ellison","active":true,"timeZone":"Etc/UTC"},"body":"Boris,\nHarmony's String#hashCode() is fine, see the discussions on the dev list\n\nhttp://markmail.org/thread/3ckdhgonbh7xtulg\nhttp://markmail.org/thread/3ckdhgonbh7xtulg\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tellison","name":"tellison","key":"tellison","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tim Ellison","active":true,"timeZone":"Etc/UTC"},"created":"2009-12-11T10:14:03.642+0000","updated":"2009-12-11T10:14:03.642+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12413122/comment/12801121","id":"12801121","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bayard","name":"bayard","key":"bayard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Henri Yandell","active":true,"timeZone":"America/Los_Angeles"},"body":"Closing out with Boris' 2nd patch effectively applied to the new Range class while adding hashCode caching (r899897).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bayard","name":"bayard","key":"bayard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Henri Yandell","active":true,"timeZone":"America/Los_Angeles"},"created":"2010-01-16T08:04:53.530+0000","updated":"2010-01-16T08:04:53.530+0000"}],"maxResults":16,"total":16,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LANG-481/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0d5w7:"}}