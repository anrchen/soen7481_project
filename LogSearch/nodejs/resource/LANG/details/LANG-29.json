{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12342535","self":"https://issues.apache.org/jira/rest/api/2/issue/12342535","key":"LANG-29","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310481","id":"12310481","key":"LANG","name":"Commons Lang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310481&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310481&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310481&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310481&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10260","id":"10260","description":"Apache Commons components","name":"Commons"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/2","id":"2","description":"The problem described is an issue which will never be fixed.","name":"Won't Fix"},"customfield_12312322":null,"customfield_12310220":"2005-09-07T06:59:51.000+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Fri Nov 11 08:12:31 UTC 2005","customfield_12310420":"146998","customfield_12312320":null,"customfield_12310222":"6_*:*_1_*:*_0_*|*_5_*:*_1_*:*_44732033592","customfield_12312321":null,"resolutiondate":"2007-02-06T23:47:10.590+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LANG-29/watchers","watchCount":0,"isWatching":false},"created":"2005-09-07T06:13:17.000+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12311701","id":"12311701","description":"","name":"2.1","archived":true,"released":true,"releaseDate":"2005-06-13"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2007-02-06T23:47:10.590+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[],"timeoriginalestimate":null,"description":"The ordering of the compareTo method method in the Fraction class is\ninconsistent with equals() because 1/2 is not equal to 2/4. However\n1/2.compareTo(2/4) is 0. \n\nMy gut feeling is that the equals method is broken and should be fixed. 1/2 ==\n2/4. However if there are good reasons for keeping the current behavior, then at\na minimum the inconsistency shoudl be called out in the JavaDoc, and users\nshould be warned against using fractions in hash tables and sorted maps and the\nlike. \n\nFor background see http://java.sun.com/j2se/1.3/docs/api/java/lang/Comparable.html","customfield_10010":36527.0,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"74945","customfield_12312823":null,"summary":"[lang] Fraction compareTo is inconsistent with equals","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=elharo%40metalab.unc.edu","name":"elharo@metalab.unc.edu","key":"elharo@metalab.unc.edu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"elharo","active":true,"timeZone":"America/New_York"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=elharo%40metalab.unc.edu","name":"elharo@metalab.unc.edu","key":"elharo@metalab.unc.edu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"elharo","active":true,"timeZone":"America/New_York"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"Operating System: All\nPlatform: Other","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12342535/comment/12410353","id":"12410353","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=scolebourne%40joda.org","name":"scolebourne@joda.org","key":"scolebourne@joda.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stephen Colebourne","active":true,"timeZone":"Etc/UTC"},"body":"This is correct behaviour for this class.\nThe commons-lang Fraction class represents a general purpose fraction\nimplementation where fractions such as 2/4 may be stored. Equals thus performs\ncorrectly and treats 1/2 and 2/4 as different as they have different state.\n\nFor an alternative Fraction implementation see commons-math (upcoming v1.1?).\nThere the fraction is always reduced, and may be more in line with a\nmathematicians thought processes.\n\nExtra javadoc added to compareTo in line with Comparable.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=scolebourne%40joda.org","name":"scolebourne@joda.org","key":"scolebourne@joda.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stephen Colebourne","active":true,"timeZone":"Etc/UTC"},"created":"2005-09-07T06:59:51.000+0000","updated":"2005-09-07T06:59:51.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12342535/comment/12410354","id":"12410354","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=elharo%40metalab.unc.edu","name":"elharo@metalab.unc.edu","key":"elharo@metalab.unc.edu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"elharo","active":true,"timeZone":"America/New_York"},"body":"The fact that the internal state is different does not in itself imply that the\nequals() method should return false. Two objects with different field values can\nbe considered equal. There's nothing in the contract for equality that says two\nequal objects must have bit-per-bit identical representations.\n\nHere I think there are two strong reasons to make 1/2.equals(2/4). The first is\nthe obvious natural mathemtical reason. Users naturally expect that 1/2 equals 2/4.\n\nThe second is the consistency with compareTo. Breaking this shouldn't be done\nwithout a really good reason. Is there such a reason? i.e. is there some use\ncase that depends on 1/2 != 2/4? If not, or if the use case is not compelling\nenough, I think we shoudl consider revising the behavior of the equals() method.\n\nIf there is such a use-case, then we need to consider revising the behavior of\nthe compareTo() method to make it consistent. Perhaps we could consistently\nresolve conflicts based on the size of the denominator. For instance, 3/6 > 2/4\n> 1/2. However, that's pretty weird and I'd really prefer to fix equals instead.\n (Plus something's tickling the back of my brain, saying there's some deep\nmathematical reason that scheme isn't going to work. I'll have to pull out my\nold number theory books and look up well-ordering.)\n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=elharo%40metalab.unc.edu","name":"elharo@metalab.unc.edu","key":"elharo@metalab.unc.edu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"elharo","active":true,"timeZone":"America/New_York"},"created":"2005-09-07T07:19:11.000+0000","updated":"2005-09-07T07:19:11.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12342535/comment/12410355","id":"12410355","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=scolebourne%40joda.org","name":"scolebourne@joda.org","key":"scolebourne@joda.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stephen Colebourne","active":true,"timeZone":"Etc/UTC"},"body":"There are cases in the JDK where compareTo and equals do not match. eg.\nBigDecimal, where 1.000 != 1.0, but they compareTo to 0. And whats more (in\nJDK1.4 at least) they don't use the correct wording from Comparable.\n\nAnd yes, in my opinion, equals does represent a comparison on state. (This is\nreally a discussion about the weaknesses in some core JDK definitions.)\n\nUse case wise, it is perfectly reasonable for someone to want to store a\nfraction of the form 2/4. This may have a particular meaning in an engineering\nor teaching domain for example. \n\nIf you want reduced fractions, simply use the dedicated factory method, or call\nte reduce method before using equals.\n\nFinally, backwards compatability really does mean we can't fix this. Lang has\nhigh standards on compatability, and this would be a clear semantic break.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=scolebourne%40joda.org","name":"scolebourne@joda.org","key":"scolebourne@joda.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stephen Colebourne","active":true,"timeZone":"Etc/UTC"},"created":"2005-09-10T18:52:46.000+0000","updated":"2005-09-10T18:52:46.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12342535/comment/12410356","id":"12410356","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=elharo%40metalab.unc.edu","name":"elharo@metalab.unc.edu","key":"elharo@metalab.unc.edu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"elharo","active":true,"timeZone":"America/New_York"},"body":"I didn't mean a use case where one should store 2/4. I accept that there are\nsuch use cases. I was asking for a use case where one would want 1/2 and 2/4 to\ncompare unequal. Barring such a use case, I might believe that backwards\ncompatibility prevents you from fixing this bug, but I still maintain it's a bug. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=elharo%40metalab.unc.edu","name":"elharo@metalab.unc.edu","key":"elharo@metalab.unc.edu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"elharo","active":true,"timeZone":"America/New_York"},"created":"2005-11-11T00:09:19.000+0000","updated":"2005-11-11T00:09:19.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12342535/comment/12410357","id":"12410357","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=scolebourne%40joda.org","name":"scolebourne@joda.org","key":"scolebourne@joda.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stephen Colebourne","active":true,"timeZone":"Etc/UTC"},"body":"In coding 1/2 not equal to 2/4, I believe that we followed established JDK\npractice of equals() representing state.\n\nMy use case is that two objects that are equal() should be capable of being\nswapped in a program with no adverse effects on subsequent code. In this case\nswapping 2/4 with 1/2 could definitely affect subsequent code.\n\nAs I said before, there is more than one possible contract for equals, and so we\nchose one.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=scolebourne%40joda.org","name":"scolebourne@joda.org","key":"scolebourne@joda.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stephen Colebourne","active":true,"timeZone":"Etc/UTC"},"created":"2005-11-11T08:12:31.000+0000","updated":"2005-11-11T08:12:31.000+0000"}],"maxResults":5,"total":5,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LANG-29/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0d77r:"}}