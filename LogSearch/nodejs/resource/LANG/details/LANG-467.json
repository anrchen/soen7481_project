{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12407261","self":"https://issues.apache.org/jira/rest/api/2/issue/12407261","key":"LANG-467","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310481","id":"12310481","key":"LANG","name":"Commons Lang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310481&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310481&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310481&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310481&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10260","id":"10260","description":"Apache Commons components","name":"Commons"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12314743","id":"12314743","description":"","name":"2.5","archived":true,"released":true,"releaseDate":"2010-02-25"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2008-10-27T15:54:30.829+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Sat Nov 14 10:10:43 UTC 2009","customfield_12310420":"34126","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_33092205646_*|*_6_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2009-11-14T10:10:43.143+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LANG-467/watchers","watchCount":1,"isWatching":false},"created":"2008-10-27T09:53:57.497+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312481","id":"12312481","description":"Bugfix release of the Lang1 codebase","name":"2.4","archived":true,"released":true,"releaseDate":"2008-03-18"}],"issuelinks":[{"id":"12422740","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12422740","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12820159","key":"LANG-1113","self":"https://issues.apache.org/jira/rest/api/2/issue/12820159","fields":{"summary":"Manages Comparable in EqualsBuilder","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/5","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/trivial.svg","name":"Trivial","id":"5"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/2","id":"2","description":"A new feature of the product, which has yet to be developed.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype","name":"New Feature","subtask":false,"avatarId":21141}}}}],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2015-04-27T20:23:13.514+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313198","id":"12313198","name":"lang.builder.*"}],"timeoriginalestimate":null,"description":"A POJO with a BigDecimal field and equals() and hashCode() methods implemented using EqualsBuilder and HashCodeBuilder breaks the general contract of Object.hashCode();\n\nEqualsBuilder treats BigDecimal specially by comparing it using BigDecimal.compareTo() == 0 rather than BigDecimal.equals()\nUsing BigDecimal.compareTo() ignores the scale of the BigDecimal()\n\nHowever the append(Object o) method of HashCodeBuilder uses BigDecimal.hashCode() in the case that o is a BigDecimal, which takes the scale into account when generating the hashCode.\n\nThe following test case shows the problem!\n{code:title=TestApacheCommonsLangHashCodeBuilder.java|borderStyle=solid}\n// package declaration and imports not shown\npublic class TestApacheCommonsLangHashCodeBuilder extends TestCase {\n    \n    public void testHashCode() {\n        MyPojo myPojo1 = new MyPojo(new String(\"foo\"), new BigDecimal(\"10.2\"));\n        MyPojo myPojo2 = new MyPojo(new String(\"foo\"), new BigDecimal(\"10.20\"));\n        \n        // equals method ignores the scale of the big decimal\n        // so this test passes\n        assertTrue(myPojo1.equals(myPojo2));\n        \n        // however in the case the equals returns true the\n        // hashCode must be the same according to the contract\n        // TEST FAILS AT THIS LINE\n        assertEquals(myPojo1.hashCode(), myPojo2.hashCode());\n    }\n    \n    private class MyPojo {\n        private String name;\n        private BigDecimal value;\n        \n        public MyPojo(String name, BigDecimal value) {\n            this.name = name;\n            this.value = value;\n        }\n        \n        public String getName() {\n            return name;\n        }\n        public BigDecimal getValue() {\n            return value;\n        }\n        /**\n         * equals method implemented using EqualsBuilder \n         * as documented by apache commons\n         */\n        @Override public boolean equals(Object obj) {\n            if(this == obj) {\n                return true;\n            }\n            \n            if(!(obj instanceof MyPojo)) {\n                return false;\n            }\n            \n            MyPojo other = (MyPojo) obj;\n            return new EqualsBuilder()\n                .append(name, other.getName())\n                .append(value, other.getValue())\n                .isEquals();\n        }\n        \n        /**\n         * hashCode method implemented using HashCodeBuilder\n         * as documented by apache commons\n         */\n        @Override public int hashCode() {\n            HashCodeBuilder hcb = new HashCodeBuilder(17, 31);\n            return hcb\n                .append(name)\n                .append(value)\n                .toHashCode();\n        }\n    }\n}\n{code}\n\nNote that the only reason I haven't provided a patch is because I could not think of one which I thought was reasonable.\n\n*Option 1*\nAlways set the scale to some value and then get the hashCode()\nExample change in HashCodeBuilder.append(Object) add the following:\n{code}\nelse if (object instanceof BigDecimal) {\n\tappend(((BigDecimal) object).setScale(DEFAULT_BIGDECIMAL_SCALE, RoundingMode.DOWN).hashCode());\n}\n{code}\nHowever what is a reasonable scale for calculating this hashCode? I cannot see a reasonanble scale to choose, that depends on the circumstance\n\n*Option 2*\nstripTrailingZeros() before calculating the hashCode()\nExample change in HashCodeBuilder.append(Object) add the following:\n{code}\nelse if (object instanceof BigDecimal) {\n\tappend(((BigDecimal) object).stripTrailingZeros().hashCode());\n}\n{code}\nThe performance of this method under different circumstances is not documented.\n\n*Option 3*\nDocument the problem and propose that the client solves the problem.\nFor example change HashCodeBuilder documentation as follows\n{code}\n/*\n * ...\n * public class Person {\n *   String name;\n *   int age;\n *   boolean smoker;\n *   BigDecimal netWorth;\n *   ...\n *\n *   public int hashCode() {\n *     // you pick a hard-coded, randomly chosen, non-zero, odd number\n *     // ideally different for each class\n *     return new HashCodeBuilder(17, 37).\n *       append(name).\n *       append(age).\n *       append(smoker).\n *       // take special care when using BigDecimal as scale takes \n *       // is included in the hashCode calculation breaking hashCode contract\n *       // choose a scale which is reasonable for hashCode calculation\n *       append(netWorth == null ? null : netWorth.setScale(2)).\n *       toHashCode();\n *   }\n * }\n * ...\n */\n{code}\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"74739","customfield_12312823":null,"summary":"EqualsBuilder and HashCodeBuilder treat java.math.BigDecimal inconsistantly and break general contract of hashCode","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davey.jones","name":"davey.jones","key":"davey.jones","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Jones","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davey.jones","name":"davey.jones","key":"davey.jones","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Jones","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12407261/comment/12642888","id":"12642888","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davey.jones","name":"davey.jones","key":"davey.jones","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Jones","active":true,"timeZone":"Etc/UTC"},"body":"typo fix and clarity improved","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davey.jones","name":"davey.jones","key":"davey.jones","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Jones","active":true,"timeZone":"Etc/UTC"},"created":"2008-10-27T10:19:55.375+0000","updated":"2008-10-27T10:19:55.375+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12407261/comment/12642946","id":"12642946","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=joehni","name":"joehni","key":"joehni","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=joehni&avatarId=36575","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=joehni&avatarId=36575","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=joehni&avatarId=36575","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=joehni&avatarId=36575"},"displayName":"Joerg Schaible","active":true,"timeZone":"Europe/Berlin"},"body":"According javadoc of BigDecimal.equals() the method should fail for values with different scale. So the use of compareTo in the EqualsBuilder is wrong in this case.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=joehni","name":"joehni","key":"joehni","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=joehni&avatarId=36575","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=joehni&avatarId=36575","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=joehni&avatarId=36575","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=joehni&avatarId=36575"},"displayName":"Joerg Schaible","active":true,"timeZone":"Europe/Berlin"},"created":"2008-10-27T15:54:30.829+0000","updated":"2008-10-27T15:54:30.829+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12407261/comment/12642949","id":"12642949","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=joehni","name":"joehni","key":"joehni","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=joehni&avatarId=36575","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=joehni&avatarId=36575","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=joehni&avatarId=36575","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=joehni&avatarId=36575"},"displayName":"Joerg Schaible","active":true,"timeZone":"Europe/Berlin"},"body":"Has already been reported in LANG-393. See discussion there.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=joehni","name":"joehni","key":"joehni","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=joehni&avatarId=36575","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=joehni&avatarId=36575","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=joehni&avatarId=36575","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=joehni&avatarId=36575"},"displayName":"Joerg Schaible","active":true,"timeZone":"Europe/Berlin"},"created":"2008-10-27T15:57:43.678+0000","updated":"2008-10-27T15:57:43.678+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12407261/comment/12642958","id":"12642958","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davey.jones","name":"davey.jones","key":"davey.jones","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Jones","active":true,"timeZone":"Etc/UTC"},"body":"The use of compareTo() in EqualsBuilder() is arguably wrong, however compareTo is referenced from the BigDecimal javadoc as the alternative to equals for cases where the scale is not relevant\n\nIn LANG-393 it was decided that EqualsBuidler should use the compareTo() method to compare BigDecimals(), which is a nice convenience for those of use using BigDecimals in conjunction with EqualsBuilder and who want 0 and 0.0 to be considered equal.\n\nHowever LANG-393 did not put the equivalent fix into the HashCodeBuilder so this has made HashCodeBuilder and EqualsBuilder non-symmetric. It was actually LANG-393 which added a feature to EqualsBuilder and at the same time created this bug in HashCodeBuilder.\n\nSo as far as the EqualsBuilder is concerned 10.2 and 10.20 are equal, i.e. the following evaluates to true.\n {code}\nnew EqualsBuilder().append(new BigDecimal(\"10.2\"), new BigDecimal(\"10.20\")).isEquals();\n{code}\n\nHowever when using these two values with HashCodeBuilder they actually give different hashCodes(), the following evaluates to false.\n{code}\nnew HashCodeBuilder(17, 37).append(new BigDecimal(\"10.2\")).toHashCode() == new HashCodeBuilder(17, 37).append(new BigDecimal(\"10.20\")).toHashCode()\n{code}\n\nHowever the contract of hashCode() method for Object says that if two objects are considered equal using their equals method then they must also generate the same hashCode().\n\nOf course this is true for BigDecimal class itself, even though it is somewhat inconvenient. \n\nMyPojo class as given in the test case above \n* implements the equals() method as documented by EqualsBuilder\n* implements the hashCode() method as documented by HashCodeBuilder\n\nDespite following the documented approach for implementing equals and hashCode the test case *proves* that MyPojo breaks the contract of hashCode(), the following evaluates to true\n{code}\nmyPojo1.equals(myPojo2)\n{code}\nHowever myPojo1 and myPojo2 generate different hashCodes(), the following evaluates to false\n{code}\nmyPojo1.hashCode() == myPojo2.hashCode()\n{code}\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davey.jones","name":"davey.jones","key":"davey.jones","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Jones","active":true,"timeZone":"Etc/UTC"},"created":"2008-10-27T16:45:44.264+0000","updated":"2008-10-28T09:10:40.652+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12407261/comment/12769654","id":"12769654","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=scolebourne","name":"scolebourne","key":"scolebourne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stephen Colebourne","active":true,"timeZone":"Europe/London"},"body":"We can't have EqualsBuilder and HashCodeBuilder out of line.\n\nMy preferred fix would be to revert the invalid change to EqualsBuilder.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=scolebourne","name":"scolebourne","key":"scolebourne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stephen Colebourne","active":true,"timeZone":"Europe/London"},"created":"2009-10-24T13:02:35.948+0000","updated":"2009-10-24T13:02:35.948+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12407261/comment/12777866","id":"12777866","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bayard","name":"bayard","key":"bayard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Henri Yandell","active":true,"timeZone":"America/Los_Angeles"},"body":"Agreed, in that I don't see a solution for HashCodeBuilder and the two need to be the same.\n\nI've reverted the change as r836149.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bayard","name":"bayard","key":"bayard","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Henri Yandell","active":true,"timeZone":"America/Los_Angeles"},"created":"2009-11-14T10:10:43.110+0000","updated":"2009-11-14T10:10:43.110+0000"}],"maxResults":6,"total":6,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/LANG-467/votes","votes":1,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0d5xz:"}}