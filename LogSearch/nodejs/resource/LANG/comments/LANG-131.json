[Sorry, the error it throws is a StringIndexOutOfBoundsException not an 
ArrayIndexOutOfBounds, &#; also causes a problem

     [java] java.lang.StringIndexOutOfBoundsException: String index out of range: 1
     [java]     at java.lang.String.charAt(String.java:460)
     [java]     at org.apache.commons.lang.Entities.unescape(Entities.java:652)
     [java]     at
org.apache.commons.lang.StringEscapeUtils.unescapeHtml(StringEscapeUtils.java:447)

Is this really a bug though? How robust should this method be in the face of
malformed entities? For example all these malformed entities also cause
problems. Maybe these exceptions should be converted to an
IllegalArgumentException and rethrown.

     [java] &# ; java.lang.NumberFormatException: For input string: " "
     [java] &#!; java.lang.NumberFormatException: For input string: "!"
     [java] &#"; java.lang.NumberFormatException: For input string: """
     [java] &##; java.lang.NumberFormatException: For input string: "#"
     [java] &#$; java.lang.NumberFormatException: For input string: "$"
     [java] &#%; java.lang.NumberFormatException: For input string: "%"
     [java] &#'; java.lang.NumberFormatException: For input string: "'"
     [java] &#(; java.lang.NumberFormatException: For input string: "("
     [java] &#); java.lang.NumberFormatException: For input string: ")"
     [java] &#*; java.lang.NumberFormatException: For input string: "*"
     [java] &#+; java.lang.NumberFormatException: For input string: "+"
     [java] &#,; java.lang.NumberFormatException: For input string: ","
     [java] &#-; java.lang.NumberFormatException: For input string: "-"
     [java] &#.; java.lang.NumberFormatException: For input string: "."
     [java] &#/; java.lang.NumberFormatException: For input string: "/"
     [java] &#:; java.lang.NumberFormatException: For input string: ":"
     [java] &#<; java.lang.NumberFormatException: For input string: "<"
     [java] &#=; java.lang.NumberFormatException: For input string: "="
     [java] &#>; java.lang.NumberFormatException: For input string: ">"
     [java] &#?; java.lang.NumberFormatException: For input string: "?"
     [java] &#@; java.lang.NumberFormatException: For input string: "@"
     [java] &#A; java.lang.NumberFormatException: For input string: "A"
     [java] &#B; java.lang.NumberFormatException: For input string: "B"
     [java] &#C; java.lang.NumberFormatException: For input string: "C"
     [java] &#D; java.lang.NumberFormatException: For input string: "D"
     [java] &#E; java.lang.NumberFormatException: For input string: "E"
     [java] &#F; java.lang.NumberFormatException: For input string: "F"
     [java] &#G; java.lang.NumberFormatException: For input string: "G"
     [java] &#H; java.lang.NumberFormatException: For input string: "H"
     [java] &#I; java.lang.NumberFormatException: For input string: "I"
     [java] &#J; java.lang.NumberFormatException: For input string: "J"
     [java] &#K; java.lang.NumberFormatException: For input string: "K"
     [java] &#L; java.lang.NumberFormatException: For input string: "L"
     [java] &#M; java.lang.NumberFormatException: For input string: "M"
     [java] &#N; java.lang.NumberFormatException: For input string: "N"
     [java] &#O; java.lang.NumberFormatException: For input string: "O"
     [java] &#P; java.lang.NumberFormatException: For input string: "P"
     [java] &#Q; java.lang.NumberFormatException: For input string: "Q"
     [java] &#R; java.lang.NumberFormatException: For input string: "R"
     [java] &#S; java.lang.NumberFormatException: For input string: "S"
     [java] &#T; java.lang.NumberFormatException: For input string: "T"
     [java] &#U; java.lang.NumberFormatException: For input string: "U"
     [java] &#V; java.lang.NumberFormatException: For input string: "V"
     [java] &#W; java.lang.NumberFormatException: For input string: "W"
     [java] &#X; java.lang.NumberFormatException: For input string: ""
     [java] &#Y; java.lang.NumberFormatException: For input string: "Y"
     [java] &#Z; java.lang.NumberFormatException: For input string: "Z"
     [java] &#[; java.lang.NumberFormatException: For input string: "["
     [java] &#\; java.lang.NumberFormatException: For input string: "\"
     [java] &#]; java.lang.NumberFormatException: For input string: "]"
     [java] &#^; java.lang.NumberFormatException: For input string: "^"
     [java] &#_; java.lang.NumberFormatException: For input string: "_"
     [java] &#`; java.lang.NumberFormatException: For input string: "`"
     [java] &#a; java.lang.NumberFormatException: For input string: "a"
     [java] &#b; java.lang.NumberFormatException: For input string: "b"
     [java] &#c; java.lang.NumberFormatException: For input string: "c"
     [java] &#d; java.lang.NumberFormatException: For input string: "d"
     [java] &#e; java.lang.NumberFormatException: For input string: "e"
     [java] &#f; java.lang.NumberFormatException: For input string: "f"
     [java] &#g; java.lang.NumberFormatException: For input string: "g"
     [java] &#h; java.lang.NumberFormatException: For input string: "h"
     [java] &#i; java.lang.NumberFormatException: For input string: "i"
     [java] &#j; java.lang.NumberFormatException: For input string: "j"
     [java] &#k; java.lang.NumberFormatException: For input string: "k"
     [java] &#l; java.lang.NumberFormatException: For input string: "l"
     [java] &#m; java.lang.NumberFormatException: For input string: "m"
     [java] &#n; java.lang.NumberFormatException: For input string: "n"
     [java] &#o; java.lang.NumberFormatException: For input string: "o"
     [java] &#p; java.lang.NumberFormatException: For input string: "p"
     [java] &#q; java.lang.NumberFormatException: For input string: "q"
     [java] &#r; java.lang.NumberFormatException: For input string: "r"
     [java] &#s; java.lang.NumberFormatException: For input string: "s"
     [java] &#t; java.lang.NumberFormatException: For input string: "t"
     [java] &#u; java.lang.NumberFormatException: For input string: "u"
     [java] &#v; java.lang.NumberFormatException: For input string: "v"
     [java] &#w; java.lang.NumberFormatException: For input string: "w"
     [java] &#x; java.lang.NumberFormatException: For input string: ""
     [java] &#y; java.lang.NumberFormatException: For input string: "y"
     [java] &#z; java.lang.NumberFormatException: For input string: "z"
     [java] &#{; java.lang.NumberFormatException: For input string: "{"
     [java] &#|; java.lang.NumberFormatException: For input string: "|"
     [java] &#}; java.lang.NumberFormatException: For input string: "}"
     [java] &#~; java.lang.NumberFormatException: For input string: "~"
, If these can be easily trapped without a major performance overhead then they should be., Fixes added to handle invalid entities, and treat them as non-entities., 2.1 released, closing.]